# ========================================
# Server configuration
# ========================================
server.port=${SPRING_LOCAL_PORT:8080}   # Default to 8080 if env variable is not set

# ========================================
# MySQL Database configuration
# ========================================
spring.datasource.url=${SPRING_DATASOURCE_URL}                       # Example: jdbc:mysql://localhost:3306/app_db?useSSL=false
spring.datasource.username=${SPRING_DATASOURCE_USERNAME}
spring.datasource.password=${SPRING_DATASOURCE_PASSWORD}
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver         # ? Updated MySQL driver

# ========================================
# JPA/Hibernate properties
# ========================================
spring.jpa.database-platform=org.hibernate.dialect.MySQLDialect      # ? Updated to current Hibernate 6 recommended MySQLDialect
spring.jpa.hibernate.ddl-auto=update    # Dev only. In production use 'validate' to prevent schema changes.
spring.jpa.show-sql=true                # Log SQL statements in dev (disable in prod)

# ========================================
# H2 Console
# ========================================
spring.h2.console.enabled=false          # Disabled since MySQL is used

# ========================================
# Spring Security default user
# ========================================
# NOTE: This is only useful for simple dev/demo setups.
# In production use robust security configuration (DB users, custom authentication, etc.)
# spring.security.user.name=YOUR_USERNAME
# spring.security.user.password=YOUR_SECURE_PASSWORD
# spring.security.user.roles=ADMIN

# ========================================
# Logging configuration
# ========================================
logging.level.com.example.newsplatform=DEBUG        # Verbose logs for local/dev
logging.level.org.springframework.security=DEBUG    # Security logs visible (disable in prod)
logging.level.org.springframework.jdbc.core=DEBUG   # Show SQL bind parameters (disable in prod)