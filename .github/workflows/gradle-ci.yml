name: Java CI with Gradle, Qodana Cloud and GitLeaks

on:
  push:
    branches: [ "main", "develop", "master" ]  # Runs on push to these branches

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 20
    permissions:
      contents: read  # Minimal read-only permissions
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Full history for accurate builds

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 21

      - name: Cache Gradle packages
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Grant execute permission for Gradle
        run: chmod +x backend/gradlew

      - name: Build with Gradle
        run: cd backend && ./gradlew build --no-daemon --warning-mode all

  test:
    runs-on: ubuntu-latest
    needs: build  # Depends on the build job
    timeout-minutes: 20
    permissions:
      contents: read
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 21

      - name: Cache Gradle packages
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Grant execute permission for Gradle
        run: chmod +x backend/gradlew

      - name: Run tests with coverage
        run: cd backend && ./gradlew test jacocoTestReport --no-daemon --warning-mode all

      - name: Upload test reports
        uses: actions/upload-artifact@v4
        with:
          name: test-reports
          path: backend/build/reports/tests/test
          if-no-files-found: warn

      - name: Upload JaCoCo coverage report
        uses: actions/upload-artifact@v4
        with:
          name: jacoco-report
          path: backend/build/reports/jacoco/test/
          if-no-files-found: warn

      - name: Upload coverage to CodeCov
        uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          file: backend/build/reports/jacoco/test/jacocoTestReport.xml
          flags: unittests
          name: codecov-news-platform

  security:
    runs-on: ubuntu-latest
    needs: [build, test]
    timeout-minutes: 10
    permissions:
      contents: read
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install and Run GitLeaks scan
        run: |
          wget https://github.com/gitleaks/gitleaks/releases/download/v8.18.0/gitleaks_8.18.0_linux_x64.tar.gz
          tar -xzf gitleaks_8.18.0_linux_x64.tar.gz
          sudo install gitleaks /usr/bin/gitleaks
          gitleaks detect --source . --verbose --redact

      - name: Upload GitLeaks scan results
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: gitleaks-results
          path: .gitleaks-report.json

  qodana:
    runs-on: ubuntu-latest
    needs: [build, test]
    timeout-minutes: 15
    permissions:
      contents: read
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Qodana Backend (JVM) Scan
        uses: JetBrains/qodana-action@v2025.1
        env:
          QODANA_TOKEN: ${{ secrets.QODANA_TOKEN_1954113934 }}
        with:
          args: --project-dir,backend
          post-pr-comment: true
          use-annotations: true
          upload-result: true