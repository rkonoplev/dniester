# =========================================================
# docker-compose.override.yml
# Production override configuration for Docker Compose.
# Run with: docker compose -f docker-compose.yml -f docker-compose.override.yml up -d
# =========================================================

services:
  db:
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD_FILE: /run/secrets/mysql_root_password
      MYSQL_DATABASE: newsdb
      MYSQL_USER_FILE: /run/secrets/db_user
      MYSQL_PASSWORD_FILE: /run/secrets/db_password
    ports: []   # no external exposure
    volumes:
      - db_data:/var/lib/mysql
    secrets:
      - mysql_root_password
      - db_user
      - db_password
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-uroot", "-p$(cat /run/secrets/mysql_root_password)"]
      interval: 10s
      timeout: 5s
      retries: 5

  app:
    restart: always
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://db:3306/newsdb?useUnicode=true&characterEncoding=utf8mb4&useSSL=false
      SPRING_DATASOURCE_USERNAME_FILE: /run/secrets/db_user
      SPRING_DATASOURCE_PASSWORD_FILE: /run/secrets/db_password
      ADMIN_USERNAME_FILE: /run/secrets/admin_user
      ADMIN_PASSWORD_FILE: /run/secrets/admin_password
      SPRING_PROFILES_ACTIVE: prod
    depends_on:
      db:
        condition: service_healthy
    ports:
      - "8080:8080"
    volumes:
      - app_logs:/var/log/app
    secrets:
      - db_user
      - db_password
      - admin_user
      - admin_password
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/"]
      interval: 15s
      timeout: 5s
      retries: 5

secrets:
  mysql_root_password:
    file: ./secrets/mysql_root_password.txt
  db_user:
    file: ./secrets/db_user.txt
  db_password:
    file: ./secrets/db_password.txt
  admin_user:
    file: ./secrets/admin_user.txt
  admin_password:
    file: ./secrets/admin_password.txt

volumes:
  db_data:
  app_logs: